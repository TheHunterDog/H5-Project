// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPF.Model;

#nullable disable

namespace WPF.Migrations
{
    [DbContext(typeof(StudentBeleidContext))]
    partial class StudentBeleidContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("WPF.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Klasscode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentbegeleiderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Studentnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tussenvoegsel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentbegeleiderId");

                    b.HasIndex("Studentnummer")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WPF.Model.StudentBegeleider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Docentcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Docentcode")
                        .IsUnique();

                    b.ToTable("StudentBegeleiders");
                });

            modelBuilder.Entity("WPF.Model.StudentBegeleiderGesprekken", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentBegeleiderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GesprekDatum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Opmerkingen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Voltooid")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "StudentBegeleiderId");

                    b.HasIndex("StudentBegeleiderId");

                    b.ToTable("StudentBegeleiderGesprekkens");
                });

            modelBuilder.Entity("WPF.Model.Student", b =>
                {
                    b.HasOne("WPF.Model.StudentBegeleider", "Studentbegeleider")
                        .WithMany("Students")
                        .HasForeignKey("StudentbegeleiderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Studentbegeleider");
                });

            modelBuilder.Entity("WPF.Model.StudentBegeleiderGesprekken", b =>
                {
                    b.HasOne("WPF.Model.StudentBegeleider", "StudentBegeleider")
                        .WithMany()
                        .HasForeignKey("StudentBegeleiderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPF.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("StudentBegeleider");
                });

            modelBuilder.Entity("WPF.Model.StudentBegeleider", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
