// <auto-generated />
using System;
using Database.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(StudentBeleidContext))]
    [Migration("20220512130103_Leerdoelen")]
    partial class Leerdoelen
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Database.Model.LearningGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.HasIndex("StudentId");

                    b.ToTable("LearningGoals");
                });

            modelBuilder.Entity("Database.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Klasscode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentBegeleiderId")
                        .HasColumnType("int");

                    b.Property<int>("StudentbegeleiderId")
                        .HasColumnType("int");

                    b.Property<string>("Studentnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tussenvoegsel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentBegeleiderId");

                    b.HasIndex("StudentbegeleiderId");

                    b.HasIndex("Studentnummer")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Database.Model.StudentSupervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TeacherCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherCode")
                        .IsUnique();

                    b.ToTable("StudentSupervisors");
                });

            modelBuilder.Entity("Database.Model.StudentSupervisorMeetings", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentBegeleiderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.HasKey("StudentId", "StudentBegeleiderId", "MeetingDate");

                    b.HasIndex("StudentBegeleiderId");

                    b.ToTable("StudentSupervisorMeetings");
                });

            modelBuilder.Entity("Database.Model.LearningGoal", b =>
                {
                    b.HasOne("Database.Model.Student", "Student")
                        .WithMany("LearningGoals")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Database.Model.Student", b =>
                {
                    b.HasOne("Database.Model.StudentSupervisor", "StudentSupervisor")
                        .WithMany()
                        .HasForeignKey("StudentBegeleiderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Model.StudentSupervisor", "Studentbegeleider")
                        .WithMany("Students")
                        .HasForeignKey("StudentbegeleiderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("StudentSupervisor");

                    b.Navigation("Studentbegeleider");
                });

            modelBuilder.Entity("Database.Model.StudentSupervisorMeetings", b =>
                {
                    b.HasOne("Database.Model.StudentSupervisor", "StudentSupervisor")
                        .WithMany("StudentSupervisorMeetings")
                        .HasForeignKey("StudentBegeleiderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Model.Student", "Student")
                        .WithMany("StudentSupervisorMeetings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("StudentSupervisor");
                });

            modelBuilder.Entity("Database.Model.Student", b =>
                {
                    b.Navigation("LearningGoals");

                    b.Navigation("StudentSupervisorMeetings");
                });

            modelBuilder.Entity("Database.Model.StudentSupervisor", b =>
                {
                    b.Navigation("StudentSupervisorMeetings");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
